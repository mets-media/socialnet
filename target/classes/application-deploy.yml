spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://81.177.6.228:5432/socialnet
    username: snuser
    password: snpassword
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: true
  mail:
    host: smtp.mail.ru
    port: 2525
    username: java.development@mail.ru
    password: eDhZJ9bk8t0hx2WNDAev
    protocol: smtp
  kafka:
    consumer:
      topic-name: topic-1
      group-id: group-1
      auto-offset-reset: earliest
      bootstrap-servers: 81.177.6.228:9092
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: true
      client-id: example
    producer:
      client-id: example
      retries: 2
    listener:
      poll-timeout: 1800000
      concurrency: 1

server:
  port: 8086

auth:
  secret: socialNet
  timeLive: 216000000
  logging:
    yandexToken: "OAuth y0_AgAAAABpyRv7AADLWwAAAADgTODc9qxs-Et7T1GdZE2muWAFM0eiubA"

schedules:
  deleteOldCaptchasInterval: 0 0 0 * * *
  deletePostsInterval: 0 0 1 * * *
  deleteLikesInterval: 0 0 1 * * *
  birthDatePush: 0 1 8 * * *

#--------------------------------------------------------
s3:
  accessKey: YCAJE83YiyNT766OLADHNeObE
  secretKey: YCMxows8B0JbmMtTWNcbdv3EtYq0TAO0i2minApz
  bucket: socnet37
weather:
  apiKey: 3d29686077f7a60e5b5714b659a688dd
mail:
  transport:
    protocol: smtp
  debug: true
  smtp:
    auth: true
    starttls: true
    ssl:
      enable: true

mailFrom: java.development@mail.ru
defaultPhoto: https://storage.yandexcloud.net/socnet37/users_photo/man.png
baseUrl:  http://81.177.6.228:8080/
tgApi: http://81.177.6.228:8079/api
#--------------------------------------------------------

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true